from flask import Flask
import sqlite3
service = Flask(__name__)

#Open a connection to DB. (Creates one if it doesn't exist)
dbCon = sqlite3.connect("malwareList.db")
dbCursor = dbCon.cursor()
#Check if malwareUrls table exists
dbResult = dbCursor.execute("SELECT name FROM sqlite_master WHERE name='malwareUrls'")
if dbResult.fetchone() == None:
    #Create table if it doesn't exist
    dbCursor.execute("CREATE TABLE malwareUrls(url)")
    # Generate fake list of malwares to experiment with.
    for i in range(500):
        dbCursor.execute("INSERT INTO malwareUrls VALUES ('malware" + str(i) + "')")
        dbCon.commit()
dbCon.close()

# Home screen for the service. TODO: Add link to instructions or remove this function if not needed.
@service.route("/")
def home():
    return "Malware URL lookup service!"

# Function to serve the queries at GET /v1/urlinfo/{resource_url_with_query_string}
@service.route('/v1/urlinfo/<resource_url_with_query_string>',methods=['GET'])
def isMalware(resource_url_with_query_string):
    #TODO: Change return type to JSON object with more information if needed.
    dbCon = sqlite3.connect("malwareList.db")
    dbCursor = dbCon.cursor()
    dbResult = dbCursor.execute("SELECT name FROM sqlite_master WHERE name='malwareUrls'")
    if dbResult.fetchone() == None:
        #Table doesn't exist
        return False
    dbResult = dbCursor.execute("SELECT url FROM malwareUrls WHERE url='" + resource_url_with_query_string + "'")
    retVal = str(dbResult.fetchone() != None)
    dbCon.close()
    return retVal

#Function to add new URLs to malware DB. Not a requirement for mvp. Implement later
# @service.route('/v1/urlinfo',methods=['PUT'])
# def addMalware():
#   return ""

# Start the service. Currently hosted on localhost:5000. TODO: Change the default and host it on web if required.
if __name__ == "__main__":
    service.run()