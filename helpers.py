from urllib.parse import urlparse, unquote
import yaml, os, logging


logger = logging.getLogger(__name__)
logging.basicConfig(format='%(asctime)s %(message)s', datefmt='%m/%d/%Y %I:%M:%S %p')

# Parse url to return only top level and second level domain.
# Ex: https://www.sample.malware.com/path/query will be parsed to malware.com
def getDomain(resource_url) -> str:
    decoded = unquote(resource_url)
    hostname = urlparse(decoded).hostname
    if not hostname:
        logger.warning("Invalid url format. resource_url='" + resource_url + "'.")
        return ''
    return'.'.join(hostname.split('.')[-2:])

#Helper function to read yaml config file.
def readYaml(file_path) -> any:
    with open(file_path, 'r') as f:
        return yaml.safe_load(f)

#Helper function to validate and parse the config file
def parseConfig(file_name) -> any:
    config = readYaml(os.path.join(os.getcwd(), file_name))
    #Validate if all the required fields are present in config file
    if not 'REDIS' in config:
        raise Exception("Invalid configuration: Field 'REDIS' missing in config.yaml")
    if not 'hostname' in config['REDIS']:
        raise Exception("Invalid configuration: Field 'hostname' missing from 'REDIS' in config.yaml")
    if not 'port' in config['REDIS']:
        raise Exception("Invalid configuration: Field 'port' missing from 'REDIS' in config.yaml")
    if not 'key' in config['REDIS']:
        raise Exception("Invalid configuration: Field \'key\' missing from \'REDIS\' in config.yaml")
    if not 'USERS' in config:
        raise Exception("Invalid configuration: Field \'USERS\' missing in config.yaml")
    return config